//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution

{
   public:
   //Function to find minimum number of attempts needed in 
   //order to find the critical floor.
   int dp[205][205];
   int eggDrop(int e, int f) {
       memset(dp,-1,sizeof dp);
       return fn(e,f);
   }
   int fn(int e, int f){
       if(e==1 || f==0 || f==1)return f;
       if(dp[e][f]!=-1)return dp[e][f];
       int ans = INT_MAX;
       for(int i=1;i<=f;i++){
           int t = 1 + max(fn(e-1,i-1),fn(e,f-i));
           ans = min(ans,t);
       }
       return dp[e][f]=ans;
   }
};

//{ Driver Code Starts.
int main()
{
    //taking total testcases
    int t;
    cin>>t;
    while(t--)
    {
        //taking eggs and floors count
        int n, k;
        cin>>n>>k;
        Solution ob;
        //calling function eggDrop()
        cout<<ob.eggDrop(n, k)<<endl;
    }
    return 0;
}

// } Driver Code Ends
